<apex:page showHeader="false" sidebar="false" standardStylesheets="false" docType="html-5.0">

	<style>
	</style>

	<div class="library-intro container">
		<div class="jumbotron">
			<h1>SfdcDatabase-Angular</h1>
			<p>A simple tool for building Salesforce-backed AngularJS apps.</p>
			<p></p>
		</div>
	</div>
	<div class="library-features">
		<div class="row">
			<div class="col-lg-6">
				<h3>Apex-like methods</h3>
				<div>
					<pre><code class="language-javascript">
// CRUD like Apex.
sfdc.query(soql);
sfdc.insert(records);
sfdc.update(records);
					</code></pre>
				</div>
				<h3>REST or JSR - same method</h3>
				<div>
					<pre><code class="language-javascript">
// Use the default, REST,...
sfdc.query(soql);

// ...or use JSR.
sfdc.insert(records,
    undefined, { useJsr: true });
					</code></pre>
				</div>
			</div>
			<div class="col-lg-6">
				<h3>Bulkified</h3>
				<div>
					<pre><code class="language-javascript">
// Update one record...
sfdc.update(record);

// ...or many.
sfdc.update(records);
					</code></pre>
				</div>
				<!-- <h3>JSR via $http (for fun)</h3>
				<div>
					<pre>
sfdc.insert(records, undefined, { useJsr: true, via$Http: true });
					</pre>
				</div> -->
			</div>
		</div>
		<div class="row">
			<div class="col-lg-12">
				<h3>Plain JS objects</h3>
				<div>
					<pre><code class="language-javascript">
// Get plain objects...
sfdc.query(soql).then(function(records) {
  records == [{
    Name: 'Test Co',
    AccountRevenue: 6000
    }, ... ];
});

// ...send plain objects.
var account = {
  Name: 'Test Co',
  AccountRevenue: 5000
};
account.AccountRevenue = 6000;
sfdc.update(account);
					</code></pre>
				</div>
				<h3>Configuration everywhere</h3>
				<div>
					<pre><code class="language-javascript">
// Global...
angular.module('yourApp')
  .config(function(sfdcAngularConfigProvider) {
    sfdcAngularConfigProvider.apiVersion = 'v31.0';
    sfdcAngularConfigProvider.transportFlagsDefault = { useJsr: false };
});

// ...or ad-hoc.
var $httpConfig = { cache: true };
sfdc.query(soql, $httpConfig);
					</code></pre>
				</div>
			</div>
		</div>
	</div>
	<script type="text/javascript">
		// Put this in the template so it runs whenever this template is loaded.
		Prism.highlightAll();
	</script>

</apex:page>
